///Avances de GifExpert

//////////////////////////////GifExpertApp //////////////////////////////////////////////
import React, { useState } from 'react'
import PropTypes from 'prop-types'

const GifExpertApp = props => {

    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];

    const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);

    const handleAdd = ()=>{
        //setCategories([...categories, 'Otro Valor'])
        setCategories( ()=>[...categories , 'Otro Valor'] )
    }

    return (
        <>
            <h2>GifExpertApp</h2>
            <hr></hr>
            <button onClick={ handleAdd } >Agregar</button>
            <ol>
                {
                    categories.map((category,i) => {
                        return <li key={i}> {category} </li>
                    }
                    )
                }
            </ol>
        </>
    )
}

//GifExpertApp.propTypes = {}

export {
    GifExpertApp
} 


/////////////////////////////AddCategory //////////////////////////////////////
import React, { useState } from 'react'
import PropTypes from 'prop-types'

const AddCategory = () => {

    const [inputValue, setinputValue] = useState('')

    //esta funcio n es la q cambia el texto en el formulario
    const handleinputChange = (e) => {
        setinputValue(e.target.value);
        console.log(e.target.value);
    }


    const handleSubmit = (e) => {
        e.preventDefault(); //para prevenir el comportamiento por defecto del formulario
        console.log('submit hecho');
    }

    return (
        <form onSubmit={handleSubmit} >
            <input type='text' value={inputValue} onChange={handleinputChange}></input>
        </form>
    )
}

//AddCategory.propTypes = {}

export default AddCategory


//////////////////////////////////GifExpertApp en la clase 8//////////////////////////////////////////
import React, { useState } from 'react'
import PropTypes from 'prop-types'
import AddCategory from './components/AddCategory';

const GifExpertApp = () => {
    const [categories, setCategories] = useState(['roll']); //'One Punch', 'Samurai X', 'Dragon Ball'

    // const handleAdd = ()=>{
    //     setCategories( ()=>[...categories , 'Otro Valor'] )
    // }

    return (
        <>
            <h2>GifExpertApp</h2>
            <AddCategory setCategories={ setCategories } />
            <hr></hr>
            {/* <button onClick={ handleAdd } >Agregar</button> */}
            <ol>
                {
                    categories.map((category,i) => {
                        return <li key={i}> {category} </li>
                    })
                }
            </ol>
        </>
    )
}

//GifExpertApp.propTypes = {}

export {
    GifExpertApp
} 



///////////////////////////////////////GifGrid en la clase 10//////////////////////////////////////////////////////////
import React, { useState, useEffect } from 'react'
import PropTypes from 'prop-types'

const GifGrid = ({ category }) => {

    const [images, setImages] = useState([]);

    useEffect(() => {
        getGifs();
    }, []) //es un arrglo de dependecias, como se lo mandamos vacio, se ejecutara una sola vez.


    const getGifs = async () => {
        let category = 'run'
        const uri = `https://api.otakugifs.xyz/gif?reaction=${category}`;
        const respuesta = await fetch(uri);
        //const data = await respuesta.json();
        const { url } = await respuesta.json();

        let gifs = [{
            id: 1,
            title: 'category ' + category,
            url: url
        }];


        console.log(gifs);
        setImages(gifs);
    }

    // let obj = {
    //     id : 1,
    //     name : url
    // }           


    //getGifs();
    return (
        <>
            <h3>{category}</h3>
            <ol>
                {
                    images.map(({id,title}) => {
                        return <li key={id}> {title} </li>
                    })
                }
            </ol>
        </>
    )
}

//GifGrid.propTypes = {}

export default GifGrid