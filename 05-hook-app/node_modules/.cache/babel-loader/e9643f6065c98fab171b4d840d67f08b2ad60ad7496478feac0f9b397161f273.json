{"ast":null,"code":"var _jsxFileName = \"C:\\\\VARIOS\\\\REACTFH2\\\\05-hook-app\\\\src\\\\components\\\\06-memos\\\\MemoHook.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useCounter from '../01-useState/useCounter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoHook = () => {\n  _s();\n  const {\n    counter,\n    increment\n  } = useCounter(5000);\n  const [show, setShow] = useState(true);\n  const procesoPesado = iteraciones => {\n    for (let i = 0; i < iteraciones; i++) {\n      console.log(iteraciones, ' Ahi vamos...');\n      return `${iteraciones} iteraciones realizadas`;\n    }\n  };\n  const memoProcesoPesado = useMemo(() => procesoPesado(counter), [counter]); //osea si el counter cambia nencesito una nueva version memorizada de esa funcion.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MemoHook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Counter: \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", memoProcesoPesado, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: increment,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-primary ml-3\",\n      onClick: () => setShow(!show),\n      children: [\"Show/Hide \", JSON.stringify(show)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n//Memorize.propTypes = {}\n_s(MemoHook, \"zIJbdZt8HoQ7JOrOcglq0RK4yb0=\", false, function () {\n  return [useCounter];\n});\n_c = MemoHook;\nexport default MemoHook;\nvar _c;\n$RefreshReg$(_c, \"MemoHook\");","map":{"version":3,"names":["React","useMemo","useState","PropTypes","useCounter","jsxDEV","_jsxDEV","MemoHook","_s","counter","increment","show","setShow","procesoPesado","iteraciones","i","console","log","memoProcesoPesado","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/VARIOS/REACTFH2/05-hook-app/src/components/06-memos/MemoHook.js"],"sourcesContent":["import React, { useMemo, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport useCounter from '../01-useState/useCounter'\r\n\r\nconst MemoHook = () => {\r\n\r\n    const { counter, increment } = useCounter(5000);\r\n    const [show, setShow] = useState(true)\r\n\r\n    const procesoPesado = (iteraciones) => {\r\n        for (let i = 0; i < iteraciones; i++) {\r\n            console.log(iteraciones, ' Ahi vamos...');\r\n            return `${iteraciones} iteraciones realizadas`;\r\n        }\r\n    }\r\n    \r\n    const memoProcesoPesado = useMemo(() => procesoPesado(counter), [counter]) //osea si el counter cambia nencesito una nueva version memorizada de esa funcion.\r\n\r\n    return (\r\n        <div>\r\n            <h1>MemoHook</h1>\r\n            <h3>Counter: {counter} </h3>\r\n            <hr></hr>\r\n            <p> {memoProcesoPesado} </p>\r\n            <button className='btn btn-primary' onClick={increment}>\r\n                +1\r\n            </button>\r\n            <button className='btn btn-outline-primary ml-3' onClick={() => setShow(!show)}>\r\n                Show/Hide {JSON.stringify(show)}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Memorize.propTypes = {}\r\n\r\nexport default MemoHook\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,QAAO,OAAO;AAC/C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGN,UAAU,CAAC,IAAI,CAAC;EAC/C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,aAAa,GAAIC,WAAW,IAAK;IACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,WAAW,EAAEC,CAAC,EAAE,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,WAAW,EAAE,eAAe,CAAC;MACzC,OAAQ,GAAEA,WAAY,yBAAwB;IAClD;EACJ,CAAC;EAED,MAAMI,iBAAiB,GAAGjB,OAAO,CAAC,MAAMY,aAAa,CAACJ,OAAO,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC,EAAC;;EAE3E,oBACIH,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjB,OAAA;MAAAa,QAAA,GAAI,WAAS,EAACV,OAAO,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA;MAAAa,QAAA,GAAG,GAAC,EAACD,iBAAiB,EAAC,GAAC;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5BjB,OAAA;MAAQkB,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAEf,SAAU;MAAAS,QAAA,EAAC;IAExD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA;MAAQkB,SAAS,EAAC,8BAA8B;MAACC,OAAO,EAAEA,CAAA,KAAMb,OAAO,CAAC,CAACD,IAAI,CAAE;MAAAQ,QAAA,GAAC,YAClE,EAACO,IAAI,CAACC,SAAS,CAAChB,IAAI,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;;AAED;AAAAf,EAAA,CA9BMD,QAAQ;EAAA,QAEqBH,UAAU;AAAA;AAAAwB,EAAA,GAFvCrB,QAAQ;AAgCd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}