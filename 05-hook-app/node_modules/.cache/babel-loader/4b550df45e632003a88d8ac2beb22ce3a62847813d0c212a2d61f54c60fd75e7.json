{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { memo, useState } from 'react';\nimport PropTypes from 'prop-types';\nconst useCounter = /*#__PURE__*/_s( /*#__PURE__*/memo(_s(inicialState => {\n  _s();\n  const [counter, setCounter] = useState(inicialState);\n  let increment = () => {\n    setCounter(counter + 1);\n  };\n  let decrement = () => {\n    setCounter(counter - 1);\n  };\n  let reset = () => {\n    setCounter(inicialState);\n  };\n  return {\n    counter,\n    increment,\n    decrement,\n    reset\n  };\n}, \"g1i2YB5DQTUmob0OPRrq9g6AkWM=\")), \"g1i2YB5DQTUmob0OPRrq9g6AkWM=\");\n\n//useCounter.propTypes = {}\n\nexport default useCounter;","map":{"version":3,"names":["React","memo","useState","PropTypes","useCounter","_s","inicialState","counter","setCounter","increment","decrement","reset"],"sources":["C:/VARIOS/REACTFH2/05-hook-app/src/components/01-useState/useCounter.js"],"sourcesContent":["import React, { memo, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useCounter = memo((inicialState) => {\r\n    const [counter, setCounter] = useState(inicialState);\r\n\r\n    let increment = () => {\r\n        setCounter(counter + 1);\r\n    }\r\n    let decrement = () => {\r\n        setCounter(counter - 1);\r\n    }\r\n\r\n    let reset = ()=>{\r\n        setCounter(inicialState);\r\n    }\r\n    return {\r\n        counter,\r\n        increment,\r\n        decrement,\r\n        reset\r\n    }\r\n})\r\n\r\n//useCounter.propTypes = {}\r\n\r\nexport default useCounter"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,UAAU,gBAAAC,EAAA,eAAGJ,IAAI,CAAAI,EAAA,CAAEC,YAAY,IAAK;EAAAD,EAAA;EACtC,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAACI,YAAY,CAAC;EAEpD,IAAIG,SAAS,GAAGA,CAAA,KAAM;IAClBD,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EAC3B,CAAC;EACD,IAAIG,SAAS,GAAGA,CAAA,KAAM;IAClBF,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EAC3B,CAAC;EAED,IAAII,KAAK,GAAGA,CAAA,KAAI;IACZH,UAAU,CAACF,YAAY,CAAC;EAC5B,CAAC;EACD,OAAO;IACHC,OAAO;IACPE,SAAS;IACTC,SAAS;IACTC;EACJ,CAAC;AACL,CAAC,kCAAC;;AAEF;;AAEA,eAAeP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}